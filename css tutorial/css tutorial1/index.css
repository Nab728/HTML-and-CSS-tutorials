
h1{
    color: white;
}
.test{
    color: black;
}
.uppercase{
    text-transform: uppercase;
}
#test2{
    text-transform: capitalize;
    font-family: 'Courier New', Courier, monospace;
}
.capitalize{
    text-transform: capitalize;
}
.arial{
    font-family: Arial;
}

.cursive{
    font-family: cursive;
}

p.darkblue{
    color: darkblue;
}
.no h5{
    color: teal;
}
h5{
    color: black;
}
/* you should make sure that class is specified first if the element you
 want to change is nested inside another element Also the more specific selector
 takes priority over the general selector */ 

h5, p{
font-family: 'Times New Roman', Times, serif;
}

h2{
    color: black !important;
}
.testing h2{
    color: white;
}
/* Using the !important tag overides a more specific selector*/
/* Also remember id is the most specific selector even if the selector contains a class
and a regular selector*/

/* You can also add cs styles to multiple selectors */
/* CSS can change the look of HTML elements. In order to do this, CSS must select
 HTML elements, then apply styles to them.
 
CSS can select HTML elements by tag, class, or ID.
Multiple CSS classes can be applied to one HTML element.
Classes can be reusable, while IDs can only be used once.
IDs are more specific than classes, and classes are more specific than tags.

That means IDs will override any styles from a class, and classes will 
override any styles from a tag selector.
Multiple selectors can be chained together to select an element. 
This raises the specificity, but can be necessary.
Nested elements can be selected by separating selectors with a space.
Multiple unrelated selectors can receive the same styles by separating the selector names with commas. */