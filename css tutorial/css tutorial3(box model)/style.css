figcaption{
    height: 200px;
    width: 200px;
    text-align: center;
    border: 2px dotted red;
    padding: 50px;
    border-radius: 50%;
    color: white;
}
/* You can also change the border radius to px. Also to make sure you
    have a perfect circle, make the border raidus 50% and the width and height
    the same*/
p{
    font-size: large;
    border: 2px solid rebeccapurple;
    padding-top: 100px;
}
/* You can also specify the padding direction. 
btw padding is the distance between the text and the border. 

 padding-top
padding-right
padding-bottom
padding-left */

.test p{
    padding: 2px 3px 4px 5px;
    border: 2px dotted beige;
    margin: 60px;
    /* u can specify the amount of padding  in each side using one declaration
    as well and the order is top right bottom left. If the top and bottom values equal and
    so do the left and right you can do
    padding: 2px 5px; (2px is for top and bottom and 5px is for
    the left and right) */
}
/* Margin is like padding but instead it's the distance between the html element and other html elements
Also has the same properties as the padding attribute ex: margin-top, bottom right left */
/* also margin: 2px 3px 4px 4px;  or margin: 2px 3px; */
/* You can also set the margin to auto which makes it so that the margins are centered to the element */
.margin{
    margin: 0 auto;
    padding: 2px 3px;
}
/* 0 means that the margin for the top and bottom is 0 px and the right and left margins are auto */
/* As you have seen, padding is space added inside an element’s border, 
while margin is space added outside an element’s border. */
/* Margins for horizantal add together to form the distance two elements are away from each other
However, for vertical margins it collapes and the greater margin px is the set distance for
the two elements */
.margin{
    min-width: 200px;
    min-height: 200px;
    max-width: 800px;
    max-height: 500px;
}
#hey{
    background: url("https://content.codecademy.com/courses/web-101/unit-6/htmlcss1-img_tahoe.jpeg");
    overflow: hidden;
    visibility: hidden;
    /* You can set an element to be visible or not (visible/hidden */
    
}
/* Oveflow accounts for content that spills outside its box. for example in the image above
any overflow content is hidden. This can be changed to be scroll which adds a scroll bar and 
the default visible which shows overflowed content */
*{
    margin: 0;
    padding: 0;
}
/* reverts all the elements to the default value */
/*The box model comprises a set of properties used to create space around and between HTML elements.
The height and width of a content area can be set in pixels or percentage.

Borders surround the content area and padding of an element. The color, style, 
and thickness of a border can be set with CSS properties.
Padding is the space between the content area and the border. 
It can be set in pixels or percent.

Margin is the amount of spacing outside of an element’s border.
Horizontal margins add, so the total space between the borders of adjacent
 elements is equal to the sum of the right margin of one element and the 
 left margin of the adjacent element.
 
Vertical margins collapse, so the space between vertically adjacent elements is equal to the larger margin.
margin: 0 auto horizontally centers an element inside of its parent content area, if it has a width.
The overflow property can be set to display, hide, or scroll, and dictates how HTML will render content that overflows its parent’s content area.
The visibility property can hide or show elements. */




